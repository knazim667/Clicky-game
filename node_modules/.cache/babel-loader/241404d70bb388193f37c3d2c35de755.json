{"ast":null,"code":"import _classCallCheck from \"/Users/nazammuhammad/Downloads/Assignment/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nazammuhammad/Downloads/Assignment/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nazammuhammad/Downloads/Assignment/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nazammuhammad/Downloads/Assignment/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nazammuhammad/Downloads/Assignment/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nazammuhammad/Downloads/Assignment/clicky-game/src/App.js\";\nimport React, { Component } from 'react';\nimport Wrapper from \"./components/Wrapper\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from './components/Jumbotron';\nimport Card from \"./components/Card\";\nimport Cards from \"./Cards.json\";\nimport Footer from \"./components/Footer\";\n\nfunction shuffleCards(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var _ref = [array[j], array[i]];\n    array[i] = _ref[0];\n    array[j] = _ref[1];\n  }\n\n  return array;\n}\n\n;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      Cards: Cards,\n      currentScore: 0,\n      topScore: 0,\n      rightWrong: \"\",\n      clicked: []\n    };\n\n    _this.handleClick = function (id) {\n      if (_this.state.clicked.indexOf(id) === -1) {\n        _this.handleIncrement();\n\n        _this.setState({\n          clicked: _this.state.clicked.concat(id)\n        });\n      } else {\n        _this.handleReset();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.state.Cards.map(function (card) {\n        return React.createElement(Card, {\n          key: card.id,\n          id: card.id,\n          image: card.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      })), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/nazammuhammad/Downloads/Assignment/clicky-game/src/App.js"],"names":["React","Component","Wrapper","BrowserRouter","Router","Navbar","Jumbotron","Card","Cards","Footer","shuffleCards","array","i","length","j","Math","floor","random","App","state","currentScore","topScore","rightWrong","clicked","handleClick","id","indexOf","handleIncrement","setState","concat","handleReset","map","card","image"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,OAAK,IAAIC,CAAC,GAAED,KAAK,CAACE,MAAN,GAAc,CAA1B,EAA6BD,CAAC,GAAC,CAA/B,EAAkCA,CAAC,EAAnC,EAAsC;AACpC,QAAIE,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAC,CAAnB,CAAX,CAAR;AADoC,eAEb,CAACD,KAAK,CAACG,CAAD,CAAN,EAAWH,KAAK,CAACC,CAAD,CAAhB,CAFa;AAEnCD,IAAAA,KAAK,CAACC,CAAD,CAF8B;AAEzBD,IAAAA,KAAK,CAACG,CAAD,CAFoB;AAGrC;;AACD,SAAOH,KAAP;AACD;;AAAA;;IAEKO,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNX,MAAAA,KAAK,EAALA,KADM;AAENY,MAAAA,YAAY,EAAE,CAFR;AAGNC,MAAAA,QAAQ,EAAE,CAHJ;AAINC,MAAAA,UAAU,EAAE,EAJN;AAKNC,MAAAA,OAAO,EAAE;AALH,K;;UAQRC,W,GAAc,UAAAC,EAAE,EAAI;AAClB,UAAG,MAAKN,KAAL,CAAWI,OAAX,CAAmBG,OAAnB,CAA2BD,EAA3B,MAAmC,CAAC,CAAvC,EAAyC;AACvC,cAAKE,eAAL;;AACA,cAAKC,QAAL,CAAc;AAAEL,UAAAA,OAAO,EAAE,MAAKJ,KAAL,CAAWI,OAAX,CAAmBM,MAAnB,CAA0BJ,EAA1B;AAAX,SAAd;AACD,OAHD,MAGO;AACL,cAAKK,WAAL;AACD;AACF,K;;;;;;;6BAES;AACR,aAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAGA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKX,KAAL,CAAWX,KAAX,CAAiBuB,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACvB,oBAAC,IAAD;AACA,UAAA,GAAG,EAAEA,IAAI,CAACP,EADV;AAEA,UAAA,EAAE,EAAEO,IAAI,CAACP,EAFT;AAGA,UAAA,KAAK,EAAEO,IAAI,CAACC,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADuB;AAAA,OAAzB,CADH,CAHA,EAYA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZA,CADF,CAFF;AAoBD;;;;EAvCehC,S;;AA4ClB,eAAeiB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Wrapper from \"./components/Wrapper\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from './components/Jumbotron';\nimport Card from \"./components/Card\"; \nimport Cards from \"./Cards.json\";\nimport Footer from \"./components/Footer\";\n\n\nfunction shuffleCards(array) {\n  for (let i= array.length -1; i>0; i--){\n    let j = Math.floor(Math.random() * (i+1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nclass App extends Component {\n  state = {\n    Cards,\n    currentScore: 0,\n    topScore: 0,\n    rightWrong: \"\",\n    clicked: [],\n  };\n\n  handleClick = id => {\n    if(this.state.clicked.indexOf(id) === -1){\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id)})\n    } else {\n      this.handleReset();\n    }\n  }\n\n  render () {\n    return(\n\n      <Router>\n        <div>\n        <Navbar />\n        <Jumbotron />\n        <Wrapper>\n          {this.state.Cards.map(card => (\n             <Card \n             key={card.id}\n             id={card.id}\n             image={card.image}\n              />\n          ))}\n        </Wrapper>\n        <Footer />\n        </div>\n      \n      </Router>\n    )\n  }\n\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}